<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-kafka="http://www.springframework.org/schema/integration/kafka"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
       http://www.springframework.org/schema/integration/kafka http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd">

    <!--<int:channel id="inputFromKafka">
        <int:queue/>
    </int:channel>-->
    <bean id="inputFromKafka" class="org.springframework.integration.channel.QueueChannel"/>
    <int-kafka:message-driven-channel-adapter
            id="adapter"
            connection-factory="connectionFactory"
            key-decoder="kafkaDecoder"
            payload-decoder="kafkaDecoder"
            max-fetch="100"
            topics="hotel_sync_fullinfo_from_fisv2"/>
    <bean id="consumerProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="auto.offset.reset">smallest</prop>
                <prop key="socket.receive.buffer.bytes">10485760</prop> <!-- 10M -->
                <prop key="fetch.message.max.bytes">5242880</prop>
                <prop key="auto.commit.interval.ms">1000</prop>
            </props>
        </property>
    </bean>
    <bean id="connectionFactory" class="org.springframework.integration.kafka.core.DefaultConnectionFactory">
        <constructor-arg ref="zookeeperConfiguration"/>
    </bean>
    <bean id="consumerFactory" class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
        <constructor-arg>
            <ref bean="consumerProperties"/>
        </constructor-arg>
    </bean>
    <bean id="kafkaEncoder" class="org.springframework.integration.kafka.serializer.common.StringEncoder">
        <constructor-arg value="java.lang.String"/>
    </bean>
    <bean id="kafkaDecoder" class="org.springframework.integration.kafka.serializer.common.StringDecoder">
        <constructor-arg value="java.lang.String"/>
    </bean>
    <int-kafka:consumer-context id="consumerContext"
                                consumer-timeout="4000" zookeeper-connect="zookeeperConnect" consumer-properties="consumerProperties">
        <int-kafka:consumer-configurations>
            <int-kafka:consumer-configuration group-id="test" max-messages="5000" value-decoder="kafkaDecoder" key-decoder="kafkaDecoder">
                <int-kafka:topic id="hotel_sync_fullinfo_from_fisv2" streams="4"/>
                <!--topic：hotel_sync_fullinfo_from_fisv2 fis客栈及房型-->
                <!--Topic：hotel_stock 房爸爸pms库存-->
            </int-kafka:consumer-configuration>
            <!-- <int-kafka:consumer-configuration group-id="default3" value-decoder="kafkaSpecificDecoder"
                key-decoder="kafkaReflectionDecoder" max-messages="10"> <int-kafka:topic-filter
                pattern="regextopic.*" streams="4" exclude="false" /> </int-kafka:consumer-configuration> -->
        </int-kafka:consumer-configurations>
    </int-kafka:consumer-context>
    <bean id="zookeeperConfiguration" class="org.springframework.integration.kafka.core.ZookeeperConfiguration">
        <constructor-arg ref="zookeeperConnect"/>
    </bean>
    <int-kafka:zookeeper-connect id="zookeeperConnect"
                                 zk-connect="localhost:2181" zk-connection-timeout="6000"
                                 zk-session-timeout="4000" zk-sync-time="200"/>

    <!--<bean id="kafkaReflectionDecoder" class="org.springframework.integration.kafka.serializer.avro.AvroReflectDatumBackedKafkaDecoder">
        <constructor-arg type="java.lang.Class" value="java.lang.String"/>
    </bean>

    <bean id="kafkaSpecificDecoder" class="org.springframework.integration.kafka.serializer.avro.AvroSpecificDatumBackedKafkaDecoder">
        <constructor-arg value="org.springframework.integration.samples.kafka.user.User" />
    </bean>-->

</beans>